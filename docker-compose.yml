# This file defines the 'recipes' for each container
version: '3.3'

services:
  # Database to store info needed to run the web-app
  mysql_db: # Must match MYSQL_HOST in /config/.dev.env
    image: mysql:latest
    container_name: mysql_db
    restart: always
    cap_add:
      - SYS_NICE
    volumes:
      - "./config/createTables.sql:/docker-entrypoint-initdb.d/createTables.sql"
      - "./config/insertData.sql:/docker-entrypoint-initdb.d/insertData.sql"
      - "mysql-data:/var/lib/mysql"
    ports:
      - "${MYSQL_DB_PORT}:${MYSQL_DB_PORT}"
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

  # Browser UI to interact with database
  mysql_ui:
      container_name: mysql_ui
      image: adminer:latest
      restart: unless-stopped
      ports:
        - "${ADMINER_PORT}:${ADMINER_PORT}"
      depends_on:
        - mysql_db
      environment:
        ADMINER_DEFAULT_SERVER: mysql_db

  # API to interact with database
  database-server:
    container_name: database-server
    build:
      dockerfile: Dockerfile
      context: "./server"
    depends_on:
      - mysql_db
    volumes:
      - /app/node_modules
      - ./server:/app
    ports:
      - "${DB_SERVER_PORT}:${DB_SERVER_PORT}"
    environment:
      JWT_SECRET: ${JWT_SECRET}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      PORT: ${DB_SERVER_PORT}

  # API to serve mp3s and zips
  file-server:
    container_name: file-server
    build:
      dockerfile: Dockerfile
      context: "./file-server"
    depends_on:
      - mysql_db
    volumes:
      - /app/node_modules
      - ./file-server:/app
      - ${FILE_SERVER_HOST_ROOT_DIR}:${FILE_SERVER_CONTAINER_ROOT_DIR}
    ports:
      - "${FILE_SERVER_PORT}:${FILE_SERVER_PORT}"
    environment:
      ROOT_DIR: ${FILE_SERVER_CONTAINER_ROOT_DIR}
      PORT: ${FILE_SERVER_PORT}

  # React web-app
  client:
    container_name: client
    stdin_open: true
    build:
      dockerfile: Dockerfile
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      PORT: ${CLIENT_PORT}
      REACT_APP_DB_SERVER_BASE_URL: ${DB_SERVER_BASE_URL}
      REACT_APP_FILE_SERVER_BASE_URL: ${FILE_SERVER_BASE_URL}

volumes:
  mysql-data:
