generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model playlists {
  id              Int             @id @default(autoincrement())
  name            String          @db.VarChar(255)
  createTimestamp DateTime        @default(now()) @db.Timestamp(0)
  songPlaylists   songPlaylists[]
}

model songPlaylists {
  id         Int       @id @default(autoincrement())
  songID     Int
  playlistID Int
  position   Int?
  playlists  playlists @relation(fields: [playlistID], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkDeleteBasedOnPlaylistID")
  songs      songs     @relation(fields: [songID], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fkDeleteBasedOnSongID")

  @@unique([songID, playlistID], map: "song_in_playlist_unique")
  @@index([playlistID], map: "fkDeleteBasedOnPlaylistID")
}

model songs {
  id              Int             @id @default(autoincrement())
  path            String          @unique(map: "path") @db.VarChar(255)
  name            String          @db.VarChar(255)
  tempo           Int?
  artist          String?         @db.VarChar(255)
  createTimestamp DateTime        @default(now()) @db.Timestamp(0)
  isParent        Int             @default(0) @db.TinyInt
  parentID        Int?
  zipPath         String?         @unique(map: "zipPath") @db.VarChar(255)
  notes           String?         @db.VarChar(255)
  songPlaylists   songPlaylists[]
}

model task {
  id              Int       @id @default(autoincrement())
  stage           Int       @default(0)
  songID          Int
  name            String?   @db.VarChar(255)
  description     String    @db.VarChar(1000)
  parentID        Int?
  createTimestamp DateTime? @default(now()) @db.Timestamp(0)
  position        Int       @default(0)
}

model users {
  id              Int      @id @default(autoincrement())
  username        String   @unique(map: "username") @db.VarChar(255)
  hashedPassword  String   @db.VarChar(255)
  createTimestamp DateTime @default(now()) @db.Timestamp(0)
  salt            String   @db.VarChar(255)
}
